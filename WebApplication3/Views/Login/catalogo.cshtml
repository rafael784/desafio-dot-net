
@{
    ViewData["Title"] = "Catalogo";
}

<!doctype html>
<html lang="pt-BR">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-+0n0xVW2eSR5OomGNYDnhzAbDsOXxcvSN1TPprVMTNDbiYZCxYbOOl7+AMvyTG2x" crossorigin="anonymous">

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">

    <style>

        .movie-data {
            display: flex;
            align-items: center;
            font-size: 11px;
            font-weight: bold;
            text-transform: uppercase;
        }

        .movie-data-text {
            display: flex;
            align-items: center;
            font-size: 11px;
        }

        .odd-row {
            background-color: #eee !important;
        }
    </style>

    <title>Filmes</title>
</head>
<body>
    <!-- <h1>Hello, world!</h1> -->

    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist" style="padding: 30px 30px 0px 30px;">
            <button class="nav-link active" id="nav-home" data-bs-toggle="tab" data-bs-target="#nav-home-tab" type="button" role="tab" aria-controls="nav-home" aria-selected="true">Catálogo</button>
            <button class="nav-link" id="nav-profile" data-bs-toggle="tab" data-bs-target="#nav-profile-tab" type="button" role="tab" aria-controls="nav-profile" aria-selected="false">Favoritos</button>
        </div>
    </nav>
    <div class="tab-content" id="nav-tabContent">

        <div class="tab-pane fade show active" id="nav-home-tab" role="tabpanel" aria-labelledby="nav-home-tab">

            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-end">
                    <li class="page-item disabled">
                        <a data-link="before" class="page-link" tabindex="-1" aria-disabled="true">Anterior</a>
                    </li>
                    <li class="page-item" style="cursor:pointer;"><a data-link="page" data-page="1" class="page-link">1</a></li>
                    <li class="page-item" style="cursor:pointer;"><a data-link="page" data-page="2" class="page-link">2</a></li>
                    <li class="page-item" style="cursor:pointer;"><a data-link="page" data-page="3" class="page-link">3</a></li>
                    <li class="page-item" style="cursor:pointer;"><a data-link="page" data-page="4" class="page-link">4</a></li>
                    <li class="page-item" style="cursor:pointer;"><a data-link="page" data-page="5" class="page-link">5</a></li>
                    <li class="page-item">
                        <a data-link="after" class="page-link">Próximo</a>
                    </li>
                </ul>
            </nav>

            <div id="list_movies" class="row row-cols-1 row-cols-md-5 g-4" style="padding: 30px;">

            </div>

        </div>

        <div class="tab-pane fade" id="nav-profile-tab" role="tabpanel" aria-labelledby="nav-profile-tab">

            <div id="list_movies_favorites" class="row row-cols-1 row-cols-md-5 g-4" style="padding: 30px;">

            </div>

        </div>

    </div>



    <div class="modal fade" id="info_movie" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="info_movie_plus" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Mais detalhe</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    ...
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fechar</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Optional JavaScript; choose one of the two! -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Option 1: Bootstrap Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-gtEjrD/SeCtmISkJkNUaaKMoLD0//ElJ19smozuHV6z3Iehds+3Ulb9Bn9Plx0x4" crossorigin="anonymous"></script>


    <script>

        $(document).ready(
            () => {

                const get_liked = () => {

                    var liked = localStorage.getItem("liked");

                    return liked ? liked.split(",") : [];

                }

                const set_liked = (liked) => {
                    localStorage.setItem("liked", liked.join(","));
                }

                const url_api = (page = 1) => {
                    return `https://api.themoviedb.org/3/movie/popular?api_key=${api_key}&language=pt-BR&page=${page}`;
                }

                const url_image = (poster_path, width = 200) => {
                    return `https://image.tmdb.org/t/p/w${width}/${poster_path.replace("/", "")}`;
                }

                const url_movie = (id) => {
                    return `https://api.themoviedb.org/3/movie/${id}?api_key=${api_key}&language=pt-BR`;
                }

                const get_page_view = (current_page) => {
                    let pages_view = [];
                    let total = 5;
                    let diff_before = current_page - 1;
                    let diff_after = total_pages - current_page;
                    let start = 1;

                    // console.log('diff_before', diff_before)
                    // console.log('diff_after', diff_after)

                    diff_before = diff_before >= 2 ? 2 : diff_before;
                    diff_after = diff_after >= 2 ? 2 : diff_after;

                    // console.log('diff_before', diff_before)
                    // console.log('diff_after', diff_after)

                    start = 1;

                    if (diff_before < 2) start = current_page - diff_before;
                    else if (diff_after < 2) start = current_page - diff_before - (2 - diff_after);
                    else start = current_page - diff_before;

                    for (let i = start; total > 0; total-- , i++) {

                        pages_view.push(i);

                    }

                    return pages_view;

                }

                const click_page_view = () => {

                    // Evento de adicionar os cliques
                    [...document.querySelectorAll("a[data-link='page']")].forEach(
                        (el, index) => {

                            el.addEventListener("click", (e) => {

                                e.preventDefault();

                                // console.log(index, el.dataset.page);

                                let page = parseInt(el.dataset.page);
                                // let endpoint = el.href;

                                // localStorage.setItem("current_page", page);

                                window.location.replace(`${window.location.href.split('?')[0]}?page=${page}`);

                            });

                        }
                    );

                }

                const update_pages = (current_page = 1) => {

                    let pages = get_page_view(current_page);

                    // console.log(pages);

                    [...document.querySelectorAll("a[data-link='page']")].forEach(
                        (el, index) => {

                            // console.log(current_page);

                            if (pages[index] != current_page) {
                                el.parentElement.classList.remove("active");
                            } else {
                                el.parentElement.classList.add("active");
                            }

                            el.dataset.page = pages[index];

                            el.innerHTML = pages[index];

                        }
                    );

                    click_page_view();

                }

                // const heart_view = (movie_id) => {
                //     if (!liked.includes(movie_id)) {
                //         return `<i class="bi bi-heart" style="font-size: 25px;"></i>`;
                //     } else {
                //         return `<i class="bi bi-heart-fill" style="font-size: 25px;"></i>`;
                //     }
                // }

                const create_movie_el = (movie) => {
                    return `
                            <div data-movie-id="${movie.id}" class="col" style="max-width: 200px;">
                                <div class="card">
                                    <a data-movie-post style="cursor:pointer;">
                                        <img src="${url_image(movie.poster_path)}" class="card-img-top" alt="Capa de ${movie.title}" style="height: 285px;">
                                    </a>
                                    <div class="card-body">
                                        <h5 class="card-title" style="font-size: 18px;">${movie.title}</h5>
                                    </div>
                                    <div class="card-body" style="background-color: #eee;display: flex;height: 67px;">
                                        <div class="like" style="cursor:pointer;flex:1;display: flex;justify-content: center;align-items: center;">
                                            <i class="bi bi-heart" style="font-size: 25px;"></i>
                                        </div>
                                        <div style="flex:3;">
                                            <a class="plus-view" style="cursor:zoom-in;display: flex;justify-content: flex-end;text-decoration: none;">
                                                <span style="
                                                    font-size: 15px;
                                                    display: flex;
                                                    align-items: center;
                                                    margin-right: 10px;
                                                ">Saiba</span>
                                                <span><i class="bi bi-plus-circle" style="
                                                    font-size: 25px;
                                                "></i></span>
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        `;
                }

                const update_favorited_movies = (results) => {

                    let favorited_movies_el = document.querySelector("#list_movies_favorites");

                    favorited_movies_el.innerHTML = "";

                    let liked = get_liked();

                    results.forEach(
                        (movie) => {

                            let _index = liked.indexOf(movie.id.toString());

                            console.log("_index", _index)

                            if (_index >= 0) {

                                console.log(movie);

                                favorited_movies_el.innerHTML += create_movie_el(movie);

                            }

                        }
                    );

                    // click_liked_movies(results);

                }

                const update_movies = (results) => {

                    movies_el = document.querySelector("#list_movies");

                    movies_el.innerHTML = "";



                    results.forEach(
                        (movie) => {

                            movies_el.innerHTML += create_movie_el(movie);

                        }
                    );

                    update_favorited_movies(results);

                    // click_movies(results);

                    click_movies(results);

                    click_liked_movies(results);

                    update_liked_movies(results);

                    click_plus_view(results);

                }

                const click_movies = (results) => {

                    var movie_modal = new bootstrap.Modal(document.getElementById('info_movie'), {
                        keyboard: false
                    });

                    [...document.querySelectorAll("a[data-movie-post]")].forEach(
                        (el, index) => {

                            el.addEventListener("click", (e) => {

                                e.preventDefault();

                                let modal_el = document.querySelector("#info_movie");

                                modal_el.querySelector(".modal-title").innerHTML = "Sinopse";

                                modal_el.querySelector(".modal-body").innerHTML = results[index].overview;

                                movie_modal.show();

                            });

                        }
                    );

                }

                const liked_movie = (id) => {

                    // console.log("Curtiu.............");

                    let liked = get_liked();

                    console.log(liked)

                    let _index = liked.indexOf(id.toString());

                    let el = document.querySelector("div[data-movie-id='" + id + "'] .like");

                    el.innerHTML = "";

                    if (_index < 0) {
                        liked.push(id);
                        el.innerHTML = `<i class="bi bi-heart-fill" style="font-size: 25px;"></i>`;
                    } else {
                        liked.splice(_index, 1);
                        el.innerHTML = `<i class="bi bi-heart" style="font-size: 25px;"></i>`;
                    }

                    set_liked(liked);

                }

                const update_liked_movies = (results) => {

                    let liked = get_liked();

                    results.forEach(
                        (movie) => {

                            let _index = liked.indexOf(movie.id.toString());

                            if (_index >= 0) {

                                document.querySelector("div[data-movie-id='" + movie.id + "'] .like").innerHTML = `<i class="bi bi-heart-fill" style="font-size: 25px;"></i>`;

                            }

                        }
                    );

                };

                const click_liked_movies = (results) => {

                    [...document.querySelectorAll("div[data-movie-id] .like")].forEach(
                        (el, index) => {

                            el.addEventListener("click", (e) => {

                                liked_movie(results[index].id);

                                update_favorited_movies(results);

                                // update_liked_movies(results);

                            });

                        }
                    );

                }

                // ----------------------------------------------------------------
                // ----------------------------------------------------------------
                // ----------------------------------------------------------------

                const click_plus_view = (results) => {

                    var modal_el = document.getElementById('info_movie_plus');

                    var movie_modal = new bootstrap.Modal(modal_el, {
                        keyboard: false
                    });

                    [...document.querySelectorAll("div[data-movie-id] .plus-view")].forEach(
                        (el, index) => {

                            el.addEventListener("click", (e) => {
                                // liked_movie(results[index].id);

                                e.preventDefault();

                                // console.log("Clicou em saber mais.......");

                                $.ajax({
                                    url: url_movie(results[index].id),
                                    success: (data) => {

                                        console.log(data);

                                        modal_el.querySelector(".modal-title").innerHTML = data.title;

                                        var modal_body = modal_el.querySelector(".modal-body");

                                        genres = [];

                                        genres = data.genres.map((v) => v.name);

                                        var dt = new Date(data.release_date + " 00:00:00");

                                        new Intl.NumberFormat('pt-BR').format(8.7)

                                        modal_body.innerHTML = `

                                                <img src="${url_image(data.backdrop_path, 500)}" class="img-fluid" alt="Responsive image" style="margin-bottom: 15px;">

                                                <div class="container">
                                                    <div class="row odd-row" style="min-height: 30px;">
                                                        <div class="col-4 movie-data"><span>Adulto</span></div>
                                                        <div class="col-8 movie-data-text">${data.adult ? 'Sim' : 'Não'}</div>
                                                    </div>
                                                </div>

                                                <div class="container">
                                                    <div class="row" style="min-height: 30px;">
                                                        <div class="col-4 movie-data"><span>Gênero(s)</span></div>
                                                        <div class="col-8 movie-data-text">${genres.join(" / ")}</div>
                                                    </div>
                                                </div>

                                                <div class="container">
                                                    <div class="row odd-row" style="min-height: 30px;">
                                                        <div class="col-4 movie-data"><span>Lançamento</span></div>
                                                        <div class="col-8 movie-data-text">${new Intl.DateTimeFormat('pt-BR').format(dt)}</div>
                                                    </div>
                                                </div>

                                                <div class="container">
                                                    <div class="row" style="min-height: 30px;">
                                                        <div class="col-4 movie-data"><span>Nota</span></div>
                                                        <div class="col-8 movie-data-text">${new Intl.NumberFormat('pt-BR').format(data.vote_average)}</div>
                                                    </div>
                                                </div>

                                                <div class="container">
                                                    <div class="row odd-row" style="min-height: 30px;">
                                                        <div class="col-4 movie-data" style="display: flex;align-items: baseline;padding-top: 10px;"><span>Sinopse</span></div>
                                                        <div class="col-8 movie-data-text" style="padding: 10px;">${data.overview}</div>
                                                    </div>
                                                </div>

                                            `;

                                        movie_modal.show();

                                    }
                                });


                            });

                        }
                    );

                }


                var api_key = "e73c0a05520a4d8328f47e2f45a485f9";
                var start_page = 1;
                var total_pages = 500;
                var total_results = 10000;

                const params = new URLSearchParams(window.location.search);

                var page_param = params.get('page');

                page_param = page_param ? parseInt(page_param) : 1;

                if (page_param < start_page) {
                    window.location.replace(`${window.location.href.split('?')[0]}?page=${start_page}`);
                } else if (page_param > total_pages) {
                    window.location.replace(`${window.location.href.split('?')[0]}?page=${total_pages}`);
                } else {

                    var current_page = page_param;

                    update_pages(current_page);

                    // Buscar os dados
                    $.ajax({
                        url: url_api(current_page),
                        success: (data) => {

                            // console.log(data);

                            if (data.hasOwnProperty('page')) {

                                update_movies(data.results);

                            }

                        }
                    });

                }

            }
        );

    </script>

</body>
</html>